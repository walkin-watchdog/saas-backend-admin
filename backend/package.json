{
  "name": "saas-backend",
  "version": "1.0.0",
  "description": "Backend API for SAAS platform",
  "main": "dist/index.js",
  "scripts": {
    "diagnostics:prisma-cache": "curl -sS localhost:${PORT:-3001}/api/platform/diagnostics/prisma-cache",
    "build": "tsc",
    "start": "node dist/index.js",
    "worker": "node dist/worker.js",
    "dev": "HOST=0.0.0.0 PORT=3001 tsx watch src/index.ts",
    "dev:worker": "HOST=0.0.0.0 PORT=3001 tsx watch src/worker.ts",
    "db:generate": "prisma generate",
    "db:migrate": "prisma migrate dev",
    "db:migrate:tenants": "tsx scripts/migrate-tenants.ts --report=./migrate-report",
    "db:migrate:tenants:dry": "tsx scripts/migrate-tenants.ts --dry-run --report=./migrate-report",
    "db:push": "prisma db push",
    "db:studio": "prisma studio",
    "db": "sudo docker run -d -p 5432:5432 -e POSTGRES_PASSWORD=postgres postgres && npx prisma migrate dev",
    "pretest": "if [ \"$CI\" != \"true\" ]; then docker compose -f docker-compose.test.yml up -d --wait; fi",
    "test": "NODE_OPTIONS=--max-old-space-size=4096 jest",
    "posttest": "if [ \"$CI\" != \"true\" ]; then docker compose -f docker-compose.test.yml down -v; fi",
    "test:unit": "jest --runInBand --passWithNoTests",
    "test:ci": "jest --coverage=false",
    "test:ci:cov": "jest --coverage",
    "typecheck": "tsc --noEmit",
    "docker:db": "docker compose -f docker-compose.test.yml up -d --wait",
    "deploy:staging": "tsx scripts/deploy-staging.ts"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "commonjs",
  "dependencies": {
    "@prisma/client": "^5.7.1",
    "@types/bcrypt": "^5.0.2",
    "bcrypt": "^6.0.0",
    "cloudinary": "^1.41.3",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "cron": "^3.1.6",
    "dotenv": "^16.3.1",
    "exceljs": "^4.4.0",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "file-type": "^21.0.0",
    "glob": "^11.0.3",
    "google-translate-api-x": "^10.7.2",
    "handlebars": "^4.7.8",
    "helmet": "^7.1.0",
    "jose": "^6.0.13",
    "jsonwebtoken": "^9.0.2",
    "lru-cache": "^11.1.0",
    "multer": "^2.0.2",
    "multer-storage-cloudinary": "^4.0.0",
    "nodemailer": "^6.9.7",
    "opossum": "^9.0.0",
    "p-limit": "^7.1.0",
    "pdfkit": "^0.14.0",
    "prom-client": "^15.1.3",
    "razorpay": "^2.9.2",
    "redis": "^5.8.0",
    "rimraf": "^6.0.1",
    "sharp": "^0.34.3",
    "superagent": "^10.2.3",
    "unleash-client": "^6.6.0",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/cookie-parser": "^1.4.7",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/file-type": "^10.6.0",
    "@types/google.maps": "^3.58.1",
    "@types/jest": "^29.5.11",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.10.5",
    "@types/nodemailer": "^6.4.14",
    "@types/opossum": "^8.1.9",
    "@types/pdfkit": "^0.12.12",
    "@types/supertest": "^2.0.12",
    "jest": "^29.7.0",
    "jose-node-cjs-runtime": "^5.10.0",
    "prisma": "^5.7.1",
    "supertest": "^7.1.4",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "tsx": "^4.6.2",
    "typescript": "^5.3.3"
  }
}